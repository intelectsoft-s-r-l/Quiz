﻿@using ISQuiz.Models.API;
@using ISQuiz.Models.Enum;
@using ISQuiz.ViewModels;
@using Newtonsoft.Json
@model QuestionnaireViewModel

@{

    ViewBag.Title = Localization.CreateQ;
    Layout = "~/Views/_Shared/_Layout.cshtml";
}


<style>
    .question {
        border: 1px solid #2c3036;
        border-radius: 10px;
        padding: 10px;
        margin: 20px 0;
        /*box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);*/
    }

    .btn-remove {
        display: none;
    }

</style>


<script>
    function showHideDetail(id) {
        var detailQuestionId = "#otherDataQ_" + id;

        // Анимированно скрываем или отображаем детали
        $(detailQuestionId).animate({
            height: 'toggle'
        });
        $("#add-answer_" + id).toggle();
    }
</script>


<form method="POST" asp-controller="Home" asp-action="UpsertQuestionnaire" id="UpsertQuestionnaireForm" enctype="multipart/form-data" class="needs-validation" novalidate>
    <div class="form-container">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <h2 class="text-center"><i class="mdi mdi-plus me-1"></i> @Localization.CreateQ</h2>

                        <input type="hidden" asp-for="oid" id="mainId" />
                        <br />

                        <div class="row">
                            <div class="col-lg-2">
                                <div class="mb-3 mb-4">
                                    <label asp-for="Title" class="form-label"><h4>@Localization.TitleQ*</h4></label>
                                </div>
                            </div>
                            <div class="col-lg-10">
                                <div class="mb-3 mb-4">
                                    <input style="width: 100%;" type="text" name="Title" class="form-control" required maxlength="100" id="defaultconfig" />
                                </div>
                            </div>
                        </div>


                        <br />

                        @{
                            EnUiLanguage currentLanguage;
                            @switch (Localization.languageState.ToUpper())
                            {
                                case "EN":
                                    currentLanguage = EnUiLanguage.EN;
                                    break;
                                case "RO":
                                    currentLanguage = EnUiLanguage.RO;
                                    break;
                                case "RU":
                                    currentLanguage = EnUiLanguage.RU;
                                    break;

                                default:
                                    currentLanguage = EnUiLanguage.EN;
                                    break;
                            }



                        }
                        <h3 style="display: inline-block; margin-right: 10px;">@Localization.Questions</h3>
                        <select id="uiLanguageSelect" name="uiLanguageSelect" style="padding: 5px; border-radius: 5px; font-size: 16px; border: 2px solid black;">
                            <option value="@currentLanguage">@currentLanguage.ToString()</option>
                            @foreach (EnUiLanguage leng in Enum.GetValues(typeof(EnUiLanguage)))
                            {
                                if (leng != currentLanguage)
                                {
                                    <option value="@leng">@leng.ToString()</option>
                                }
                            }
                        </select>


                        <div id="questions-container">
                        </div>

                        <button type="button" id="add-question" style="margin-top: 10px; width: 100%;" class="btn btn-primary waves-effect waves-light">@Localization.AddQuestion</button>
                        <button type="submit" style="margin-top: 10px; width: 100%;" class="btn btn-success waves-effect waves-light"><i class="uil uil-file-alt me-1"></i> @Localization.Save</button>

                        <a type="button" href="/" style="margin-top: 10px; width: 100%;" class="btn btn-secondary btn-soft-secondary waves-effect waves-light">@Localization.Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- plugins -->
<script src="~/assets/libs/select2/js/select2.min.js"></script>
<script src="~/assets/libs/spectrum-colorpicker2/spectrum.min.js"></script>
<script src="~/assets/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
<script src="~/assets/libs/bootstrap-touchspin/jquery.bootstrap-touchspin.min.js"></script>
<script src="~/assets/libs/bootstrap-maxlength/bootstrap-maxlength.min.js"></script>
<script src="~/assets/libs/chenfengyuan/datepicker/datepicker.min.js"></script>

<!-- init js -->
<script src="~/assets/js/pages/form-advanced.init.js"></script>
<script src="~/assets/js/pages/form-validation.init.js"></script>


@section scripts {
    <script>
        $(document).ready(function () {

            function setInputVisibility(selectedLanguage) {
                // Hide all language-specific input elements
                $("input[id*='questionName']").addClass("hidden");
                $("input[id*='questionComentary']").addClass("hidden");
                $("input[id*='answerVal']").addClass("hidden");

                $("input[id*='questionName']").prop("required", false);
                $("input[id*='answerVal']").prop("required", false);

                // Show the input element corresponding to the selected language
                if (selectedLanguage === "RU") {
                    $("input[id*='questionNameRU']").removeClass("hidden");
                    $("input[id*='questionNameRU']").prop("required", true);

                    $("input[id*='questionComentaryRU']").removeClass("hidden");

                    $("input[id*='answerValRU']").removeClass("hidden");
                    $("input[id*='answerValRU']").prop("required", true);

                } else if (selectedLanguage === "RO") {
                    $("input[id*='questionNameRO']").removeClass("hidden");
                    $("input[id*='questionNameRO']").prop("required", true);

                    $("input[id*='questionComentaryRO']").removeClass("hidden");

                    $("input[id*='answerValRO']").removeClass("hidden");
                    $("input[id*='answerValRO']").prop("required", true);

                } else if (selectedLanguage === "EN") {
                    $("input[id*='questionNameEN']").removeClass("hidden");
                    $("input[id*='questionNameEN']").prop("required", true);

                    $("input[id*='questionComentaryEN']").removeClass("hidden");

                    $("input[id*='answerValEN']").removeClass("hidden");
                    $("input[id*='answerValEN']").prop("required", true);
                }
            }

            var selectedLanguage = $(".card-body").find("select[id*='uiLanguageSelect']").val();


            var questionIndex = 0;

            function addQuestion() {
                var questionHtml = `
                                                <div class="question" id="question_${questionIndex}">
                                                <input type="hidden" value="0" id="questionId_" />
                                                <button type='button' style="width: 100%;" class='btn btn-danger waves-effect waves-light btnremove ${questionIndex === 0 ? ' hidden' : ''}'><i class="uil-trash-alt"></i> @Localization.Delete</button>
                                                <div class="form-group">
                                                    <label for="Questions_${questionIndex}__Text"><i class="uil-eye font-size-20" onclick="showHideDetail(${questionIndex})" style="cursor: pointer;"></i> @Localization.QuestionText*</label>

                                                    <input type="text" name="Questions[${questionIndex}].question" class="form-control" maxlength='100' id="questionNameRU_${questionIndex}" />
                                                    <input type="text" name="Questions[${questionIndex}].question" class="form-control" maxlength='100' id="questionNameRO_${questionIndex}" />
                                                    <input type="text" name="Questions[${questionIndex}].question" class="form-control" maxlength='100' id="questionNameEN_${questionIndex}" />
                                                </div>
                                                <br />
                                                <div id="otherDataQ_${questionIndex}">

                                                    <div class="form-group">
                                                        <label for="Questions_${questionIndex}__comentary">@Localization.Comment</label>
                                                        <input type="text" name="Questions[${questionIndex}].comentary" maxlength='100' class="form-control" id="questionComentaryRU_${questionIndex}" />
                                                        <input type="text" name="Questions[${questionIndex}].comentary" maxlength='100' class="form-control" id="questionComentaryRO_${questionIndex}" />
                                                        <input type="text" name="Questions[${questionIndex}].comentary" maxlength='100' class="form-control" id="questionComentaryEN_${questionIndex}" />
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="Questions_${questionIndex}__gradingType">@Localization.GradingType</label>
                                                        <select id="questionGradingType_${questionIndex}" name="Questions[${questionIndex}].gradingType" class="form-select">
                                                            <option value="1">@Localization.YesNo</option>
                                                            <option value="5">@Localization.Point5Score</option>
                                                            <option value="2">@Localization.Point10Score</option>
                                                            <option value="3">@Localization.SingleAnswerVariant</option>
                                                            <option value="4">@Localization.MultipleAnswerVariant</option>
                                                        </select>
                                                    </div>
                                                    <div class="answers-container" style="display: none;">
                                                        <br />
                                                        <h4>@Localization.Responses</h4>
                                                        <br />
                                                    </div>
                                                    <button type="button" id="add-answer" style="display: none; width: 100%; margin-top: 10px;" class="btn btn-info waves-effect waves-light"><i class="mdi mdi-plus me-1"></i> @Localization.AddAnswer</button>
                                                </div>
                                            </div>
                                                        `;

                $("#questions-container").append(questionHtml);
                questionIndex++;
                addRemoveAction();
                addRemoveAnswerAction();
            }



            function addRemoveAction() {
                $(".btnremove").each(function (index, item) {
                    $(item).click(function () {
                        var $question = $(this).closest('.question');
                        $question.remove();
                    });
                });
            }


            function addRemoveAnswerAction() {
                $("#questions-container").on("click", "#btnremoveAnsw", function () {
                    var $answer = $(this).closest('.answer');
                    $answer.remove();
                });
            }

            $("#add-question").click(function () {
                addQuestion();
                setInputVisibility(selectedLanguage);
            });


            let divsSetQuestions = $('#questions-container').find('div[id*="question_"]');

            divsSetQuestions.each(function (e, element) {
                let questionGradingType = $("#" + element.id).find("select[id*='questionGradingType_']");
                let questionButtonAnswer = $("#" + element.id).find("button[id*='add-answer']");
                if (questionGradingType[0].value == '1' || questionGradingType[0].value == '2') {
                    questionButtonAnswer.hide();
                }
                else {
                    questionButtonAnswer.show();

                }

            });


            $("#questions-container").on("change", "select[id*='questionGradingType_']", function () {
                var $question = $(this).closest(".question");
                var $answersContainer = $question.find(".answers-container");
                var $answers = $question.find(".answer");
                var $addAnswerButton = $question.find("#add-answer");



                if ($(this).val() == "4" || $(this).val() == "3") {
                    $answersContainer.show();
                    $addAnswerButton.show();

                    // $removeAnswerButton.show();

                    // Проверка наличия div с классом "answer"
                    if ($answers.length === 0) {
                        var newDiv = $("<div>").addClass("answer");  // Создаем новый элемент div с классом "answer"

                        // Добавляем содержимое в новый div
                        newDiv.html(`
                                                    <div class="col-lg-12">
                                                        <label for="Questions_${questionIndex}__Answers_0__Text">@Localization.AnswerText*</label>
                                                        <input type="text" name="Questions[${questionIndex}].answerVariants[0]" maxlength='100' class="form-control mb-4" id="answerValRU_${questionIndex}-0" />
                                                        <input type="text" name="Questions[${questionIndex}].answerVariants[0]" maxlength='100' class="form-control mb-4" id="answerValRO_${questionIndex}-0" />
                                                        <input type="text" name="Questions[${questionIndex}].answerVariants[0]" maxlength='100' class="form-control mb-4" id="answerValEN_${questionIndex}-0" />
                                                        <input type="hidden" value="0" id="answerId_${questionIndex}-0" />
                                                    </div>
                                                `);

                        // Добавляем новый div внутрь существующего div
                        $answersContainer.append(newDiv);
                    }


                }
                else {
                    $answers.remove();
                    $answersContainer.hide();
                    $addAnswerButton.hide();

                }
                setInputVisibility(selectedLanguage);
            });

            $("#questions-container").on("click", "#add-answer", function () {
                var $question = $(this).closest(".question");
                var $answersContainer = $question.find(".answers-container");
                var answerIndex = $answersContainer.find(".answer").length;

                var answerHtml = `<div class="answer">
                                                                <div class="form-group">
                                                                        <div class="row align-items-center">
                                                                        <div class="col-lg-10">
                                                                            <label for="Questions_${questionIndex}__Answers_${answerIndex}__Text">@Localization.AnswerText*</label>
                                                                            <input type="text" name="Questions[${questionIndex}].answerVariants[${answerIndex}]" maxlength='100' class="form-control mb-4" id="answerValRU_${questionIndex}-${answerIndex}" />
                                                                            <input type="text" name="Questions[${questionIndex}].answerVariants[${answerIndex}]" maxlength='100' class="form-control mb-4" id="answerValRO_${questionIndex}-${answerIndex}" />
                                                                            <input type="text" name="Questions[${questionIndex}].answerVariants[${answerIndex}]" maxlength='100' class="form-control mb-4" id="answerValEN_${questionIndex}-${answerIndex}" />
                                                                            <input type="hidden" value="0" id="answerId_${questionIndex}-${answerIndex}" />
                                                                        </div>
                                                                        <div class="col-lg-2">
                                                                            <!--<input type='button' id='btnremoveAnsw' style="width: 100%;" class='btn btn-danger waves-effect waves-light' value=' @Localization.Delete' />-->
                                                                            <button type='button' id='btnremoveAnsw' style="width: 100%;  margin-top:6px;" class='btn btn-danger waves-effect waves-light ${answerIndex === 0 ? ' hidden' : ''}'><i class="uil-trash-alt"></i> @Localization.Delete</button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>`;

                $answersContainer.append(answerHtml);
                setInputVisibility(selectedLanguage);
                addRemoveAnswerAction();
            });

            addRemoveAction();
            addRemoveAnswerAction();


            addQuestion();

            // Call the function to set input visibility based on the selected language
            setInputVisibility(selectedLanguage);
            $(".card-body").on("change", "select[id*='uiLanguageSelect']", function () {
                // Get the selected language when the dropdown changes
                selectedLanguage = $(this).val();

                // Call the function to set input visibility based on the selected language
                setInputVisibility(selectedLanguage);
            });




            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (e) {
                    //e.preventDefault();
                    //e.stopPropagation();
                    if (form.checkValidity() === true) {
                        e.preventDefault();
                        var questions = [];


                        let divsSetQuestions = $('#questions-container').find('div[id*="question_"]');
                        let mainIdquestionnaire = $('#mainId').val();
                        divsSetQuestions.each(function (e, element) {
                            var answerRes = [];
                            let questionid = $("#" + element.id).find("input[id*='questionId_']");

                            let questionNameRU = $("#" + element.id).find("input[id*='questionNameRU_']")[0].value;
                            let questionNameRO = $("#" + element.id).find("input[id*='questionNameRO_']")[0].value;
                            let questionNameEN = $("#" + element.id).find("input[id*='questionNameEN_']")[0].value;
                            let questionName = JSON.stringify({ EN: questionNameEN, RO: questionNameRO, RU: questionNameRU });

                            let questionGradingType = $("#" + element.id).find("select[id*='questionGradingType_']");

                            let questionComentaryRU = $("#" + element.id).find("input[id*='questionComentaryRU_']")[0].value;
                            let questionComentaryRO = $("#" + element.id).find("input[id*='questionComentaryRO_']")[0].value;
                            let questionComentaryEN = $("#" + element.id).find("input[id*='questionComentaryEN_']")[0].value;
                            let questionComentary = JSON.stringify({ EN: questionComentaryEN, RO: questionComentaryRO, RU: questionComentaryRU });

                            //debugger
                            let answerValRU = $("#" + element.id).find("input[id*='answerValRU']");
                            let answerValRO = $("#" + element.id).find("input[id*='answerValRO']");
                            let answerValEN = $("#" + element.id).find("input[id*='answerValEN']");
                            // if (answerValRU.length > 0) {
                            for (var i = 0; i < answerValRU.length; i++) {
                                let ruValInput = answerValRU[i].value;
                                let roValInput = answerValRO[i].value;
                                let enValInput = answerValEN[i].value;

                                if (ruValInput.length > 0 || roValInput.length > 0 || enValInput.length) {
                                    answerRes.push({ id: 0, questionId: 0, response: JSON.stringify({ EN: enValInput, RO: roValInput, RU: ruValInput }) });
                                }
                            }

                            //}
                            questions.push({ id: questionid[0].value, questionnaireId: mainIdquestionnaire, question: questionName, gradingType: questionGradingType[0].value, comentary: questionComentary, responseVariants: answerRes });
                        });

                        var Quest = {
                            id: mainIdquestionnaire,
                            Title: $('#defaultconfig').val(),
                            Questions: JSON.stringify({ questions }),
                        };
                        $.ajax({
                            url: '/Home/CreateQuestionnaire',
                            cache: false,
                            type: "POST",
                            data: JSON.stringify(Quest),
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                if (data.statusCode === 200) {
                                    window.location.href = '/Home/Index';
                                } else {

                                }
                            },

                        });

                    }
                    form.classList.add('was-validated');
                }, false);
            });


        });
    </script>
}