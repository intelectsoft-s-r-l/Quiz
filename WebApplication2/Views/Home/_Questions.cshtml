@using ISQuiz.Models.API.Questionnaires;
@using ISQuiz.Models.Enum;
@model DetailQuestions


<script>

    function smoothScrollTo(target) {
        const offset = $(target).offset().top - 80; // учитываем отступ шторки
        $('html, body').scrollTop(offset);
    }

    $('a[href^="#"]').on('click', function (event) {
        const target = $(this).attr('href');
        smoothScrollTo(target);
        event.preventDefault(); // предотвращаем стандартное поведение перехода по ссылке
    });

</script>

<div id="questions-container">
    @{
        int i = 1;
    }

    @foreach (var item in Model.questions.OrderBy(x => x.id)) // Был бы порядковый номер вопроса, а не id было бы лучше так что не смейтесь!
    {
        <div class="question" id="questionN_@i">

            <div class="pencil">
                <a href="#questionN_@i"><i class="fas fa-pencil-alt btn btn-primary waves-effect waves-light" onclick="EditQuestion(@i)"></i></a>
            </div>

            <div class="form-group">
                <input hidden id="QuestionId" value="@item.id" />
                <h4>
                    <strong>@Localization.Question №@i</strong><i class="uil-eye font-size-24"
                                                                  data-status="open"
                                                                  onclick="toggleEye(this); DetailMore(@i);"
                                                                  style="cursor: pointer;"></i>
                </h4>
                <p id="questionName_@i">@item.question</p>
            </div>

            <div id="detail_@i">

                <div class="form-group">
                    <b>@Localization.Comment</b>
                    @if (!string.IsNullOrEmpty(item.comentary))
                    {
                        <p id="questionComentary_@i" data-status="withComent">@item.comentary</p>
                    }
                    else
                    {
                        <p id="questionComentary_@i" data-status="noComent"> *@Localization.SkipCommentMessage</p>
                    }
                </div>

                <div class="form-group">
                    @{
                        //var gradingTypes = Enum.GetValues(typeof(GradingType)).Cast<GradingType>().Select(v => v.ToString()).ToArray();
                        //var tmp = Enum.GetValues(typeof(GradingType));
                    }
                    <input hidden id="questionGradingType_@i" value="@Convert.ToInt32(item.gradingType)" />
                    <b>@Localization.GradingType</b>
                    <p>@Localization.ResourceManager.GetString(item.gradingType.ToString())</p>
                </div>


                <div class="answers-container" id="answersContainer_@i">
                    @{
                        int j = 1;
                    }
                    @if (item.gradingType == GradingType.SingleAnswerVariant || item.gradingType == GradingType.MultipleAnswerVariant)
                    {
                        <h4>@Localization.Responses</h4>
                        <br />
                        <ul>
                            @foreach (var answ in item.responseVariants.OrderBy(x => x.id))
                            {
                                <li>
                                    <div class="answer" id="response_@j">
                                        <div class="row">
                                            <div class="col-md-11">
                                                <p>@answ.response</p>
                                            </div>
                                            <div class="col-md-1">
                                                <button type='button' style='width: 100%; display: none;' class='btn btn-danger btnremoveAnsw'> <i class="uil-trash-alt"></i> @Localization.Delete</button>
                                            </div>
                                        </div>
                                    </div>
                                </li>


                                j++;
                            }
                        </ul>


                    }
                </div>
            </div>
        </div>
        i++;
    }



</div>