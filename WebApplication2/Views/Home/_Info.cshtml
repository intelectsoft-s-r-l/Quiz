@using ISQuiz.Models.API;
@using ISQuiz.Models.Enum;
@using ISQuiz.ViewModels;
@using Newtonsoft.Json
@model QuestionnaireViewModel



<script src="~/js/Home/InfoQuestionnaire.js"></script>

<style>

    .form-container {
        font-size: 19px; /* Исходный размер шрифта */
    }

    .form-group {
        margin-bottom: 20px;
    }

    .question {
        border: 1px solid #2c3036; /*eceeef*/
        border-radius: 30px;
        padding: 20px;
        margin: 40px 0;
        /*box-shadow: 0 0 10px 0px rgb(0 0 0 / 10%);*/
        position: relative;
    }

    .btn-remove {
        display: none;
    }

    .pencil {
        position: absolute;
        top: 15px;
        right: 20px; /* Расположение карандаша справа от div */
        display: none; /* Скрыть карандаш изначально */
    }

    .question:hover .pencil {
        display: block; /* Показать карандаш при наведении на div */
    }

    #editBtnTitle {
        background-color: #37AA0F;
    }

</style>


<script>

    function CustomValidator(index) {

        var ISValid = true;


        if ($('#questionNameRU_' + index).val() === "" && $('#questionNameRO_' + index).val() === "" && $('#questionNameEN_' + index).val() === "") {
            if ($('#QuestionNameError').val() == null) {
                $('#detail_' + index).before('<label id="QuestionNameError" class="text-danger">@Localization.QuestionTextValidation</label>');
            }
            ISValid = false;
        }

        // if ($('#questionComentary_' + index).val() === "") {
        //     if ($('#QuestionComentaryError').val() == null) {
        //         $('#questionComentary_' + index).after('<label id="QuestionComentaryError" class="text-danger">@Localization.ComentaryTextValidation</label>');
        //     }
        //     ISValid = false;
        // }
        var gradingTypeValue = $("#questionN_0").find("select[id*='questionGradingType_0']").val()
        if (gradingTypeValue == '3' || gradingTypeValue == '4') {
            if ($('#responseRU_0').val() === "" && $('#responseRO_0').val() === "" && $('#responseEN_0').val() === "" ) {
                if ($('#ResponseError').val() == null) {
                    $('#newResponseId').after('<label id="ResponseError" class="text-danger">@Localization.AnswerTextValidation</label>');
                }
                ISValid = false;
            }
        }
        /*
                let divsSetQuestion = $("#questionN_" + index).find(`#answersContainer_${index}`);

                divsSetQuestion.each(function (e, element) {
                    let responses = $("#" + element.id).find("[id^='response_']");
                    responses.each(function (index, responseElement) { //index - 0,1,2...
                        // Получаем значение из textarea
                        let responseText = $(responseElement).val();
                        if (responseText === "") {
                            if ($('#ResponseError_' + index).val() == null) {
                                $('#response_' + index).after(`<label id="ResponseError_${index}" class="text-danger">"Text"</label>`);
                            }
                            ISValid = false;
                        }
                    });
                });
                */

        return ISValid;
    }

    function editTitleMain() {

        var container = $('#titleContainer');
        var titleElement = container.find("#mainTitleVal");

        // Создаем input для редактирования
        var titleInput = $("<input type='text' class='form-control' id='defaultconfig' style='width: 30vw;' value='" + titleElement.text() + "' maxlength='100'/>");

        // Заменяем h1 на input
        titleElement.replaceWith(titleInput);

        // Заменяем кнопку Edit на Save
        var saveButton = $("<a class='btn waves-light save' title='Save' style='background-color: #37AA0F;'><i class='fas fa-save font-size-18' style='color: white;'></i></a>").on("click", function () {

            var updatedTitle = titleInput.val();


            if (updatedTitle.trim() === "") {
                if ($('#TitleNameError').val() == null) {
                    container.append('<label id="TitleNameError" class="text-danger text-center">@Localization.QuestionnaireTitleValidation</label>');
                }
            }
            else {
                $("#TitleNameError").remove();
                var Quest = {
                    oid: $('#mainId').val(),
                    name: $('#defaultconfig').val(),
                };

                $.ajax({
                    url: '/Home/UpsertQuestionnaire',
                    cache: false,
                    type: "POST",
                    data: JSON.stringify(Quest),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.statusCode === 200) {
                            var escapedTitle = $('<div>').text(updatedTitle).html();
                            titleInput.replaceWith(`<h1 id='mainTitleVal'>${escapedTitle}</h1>`);
                            // Заменяем кнопку Save на Edit
                            saveButton.replaceWith("<a class='btn waves-light' id='editBtnTitle' onclick='editTitleMain()'><i class='fas fa-pencil-alt font-size-18' style='color: white;'></i></a>");
                        } else {

                        }
                    },

                });
            }


        });

        container.find("#editBtnTitle").replaceWith(saveButton);
    }

    function EditQuestion(index) {


        var container = $("#questionN_" + index);


        var questionCount = $('#questions-container .question').length;

        if (questionCount > 1) {
            // Ваш код для случая, когда найдено более одного вопроса
            var removeQuestionButton = $(`<button type='button' style='width: 100%;' class='btn btn-danger waves-effect waves-light btnremoveQuestion' onclick='DeleteQuestion(${index}, ${@Model.oid})'><i class='uil-trash-alt'></i> @Localization.Delete</button>`);
            container.prepend(removeQuestionButton);
        }

        document.getElementById('editBtn').style.display = 'none';

        var cancelBtn = document.getElementById('cancelBtn');
        cancelBtn.classList.remove('col-lg-3');
        cancelBtn.classList.add('col-lg-12');

        /*
                var detailHide = container.find("#detail_" + index);
                detailHide.animate({
                    height: 'show'
                });
                */
        $('[id^="detail_"]').each(function () {
            $(this).animate({
                height: 'show'
            });
        });

        $('.uil-eye-slash').each(function () {
            if ($(this).attr('data-status') === 'closed') {
                toggleEye(this);
            }
        });
        var titleElementRU = container.find("#questionNameRU_" + index);
        var titleElementRO = container.find("#questionNameRO_" + index);
        var titleElementEN = container.find("#questionNameEN_" + index);

        var comentaryElementRU = container.find("#questionComentaryRU_" + index);
        var comentaryElementRO = container.find("#questionComentaryRO_" + index);
        var comentaryElementEN = container.find("#questionComentaryEN_" + index);

        var gradingTypeElement = container.find("#questionGradingType_" + index);


        // Создаем input для редактирования
        if (titleElementRU.attr('data-status') === 'withText') {
            var titleInputRU = $(`<input type='text' id='questionNameRU_${index}' class='form-control' value='${titleElementRU.text()}' maxlength='100' />`);
        }
        else {
            var titleInputRU = $(`<input type='text' id='questionNameRU_${index}' class='form-control' value='' maxlength='100' />`);
        }
        if (titleElementRO.attr('data-status') === 'withText') {
            var titleInputRO = $(`<input type='text' id='questionNameRO_${index}' class='form-control' value='${titleElementRO.text()}' maxlength='100' />`);
        }
        else {
            var titleInputRO = $(`<input type='text' id='questionNameRO_${index}' class='form-control' value='' maxlength='100' />`);
        }
        if (titleElementEN.attr('data-status') === 'withText') {
            var titleInputEN = $(`<input type='text' id='questionNameEN_${index}' class='form-control' value='${titleElementEN.text()}' maxlength='100' />`);
        }
        else {
            var titleInputEN = $(`<input type='text' id='questionNameEN_${index}' class='form-control' value='' maxlength='100' />`);
        }


        if (comentaryElementRU.attr('data-status') === 'withText') {
            var comentaryInputRU = $(`<input type='text' id='questionComentaryRU_${index}' class='form-control' value='${comentaryElementRU.text()}' maxlength='100' />`);
        }
        else {
            var comentaryInputRU = $(`<input type='text' id='questionComentaryRU_${index}' class='form-control' value='' maxlength='100' />`);
        }
        if (comentaryElementRO.attr('data-status') === 'withText') {
            var comentaryInputRO = $(`<input type='text' id='questionComentaryRO_${index}' class='form-control' value='${comentaryElementRO.text()}' maxlength='100' />`);
        }
        else {
            var comentaryInputRO = $(`<input type='text' id='questionComentaryRO_${index}' class='form-control' value='' maxlength='100' />`);
        }
        if (comentaryElementEN.attr('data-status') === 'withText') {
            var comentaryInputEN = $(`<input type='text' id='questionComentaryEN_${index}' class='form-control' value='${comentaryElementEN.text()}' maxlength='100' />`);
        }
        else {
            var comentaryInputEN = $(`<input type='text' id='questionComentaryEN_${index}' class='form-control' value='' maxlength='100' />`);
        }




        var gradingTypeValue = gradingTypeElement[0].value;


        if (gradingTypeValue == '3' || gradingTypeValue == '4') {
            let divsSetQuestion = container.find(`div[id*="answersContainer_${index}"]`);

            divsSetQuestion.each(function (e, element) {
                let responsesRU = $("#" + element.id).find("[id^='responseRU']");
                let responsesRO = $("#" + element.id).find("[id^='responseRO']");
                let responsesEN = $("#" + element.id).find("[id^='responseEN']");

                responsesRU.each(function (index, responseElement) {
                    if ($(responseElement).data('status') === 'noComent') {
                        var answerInputRU = $(`<p id='responseTextRU'>@Localization.AnswerText</p> <input type='text' class='form-control' id='responseRU_' value='' maxlength='100' />`);
                        $(responseElement).replaceWith(answerInputRU);
                    }
                });

                responsesRO.each(function (index, responseElement) {
                    if ($(responseElement).data('status') === 'noComent') {
                        var answerInputRO = $(`<p id='responseTextRO'>@Localization.AnswerText</p> <input type='text' class='form-control' id='responseRO_' value='' maxlength='100' />`);
                        $(responseElement).replaceWith(answerInputRO);
                    }
                });

                responsesEN.each(function (index, responseElement) {
                    if ($(responseElement).data('status') === 'noComent') {
                        var answerInputEN = $(`<p id='responseTextEN'>@Localization.AnswerText</p> <input type='text' class='form-control' id='responseEN_' value='' maxlength='100' />`);
                        $(responseElement).replaceWith(answerInputEN);
                    }
                });
            });
        }





        // Заменяем на input
        titleElementRU.replaceWith(titleInputRU);
        titleElementRO.replaceWith(titleInputRO);
        titleElementEN.replaceWith(titleInputEN);

        comentaryElementRU.replaceWith(comentaryInputRU);
        comentaryElementRO.replaceWith(comentaryInputRO);
        comentaryElementEN.replaceWith(comentaryInputEN);

        function setInputVisibility(selectedLanguage) {
            
            // Hide all language-specific input elements
            $("input[id*='questionName']").addClass("hidden");
            $("input[id*='questionComentary']").addClass("hidden");
            $("input[id*='response']").addClass("hidden");
            $("p[id*='responseText']").addClass("hidden");
            //$("input[id*='questionName']").prop("required", false);

            // Show the input element corresponding to the selected language
            if (selectedLanguage === "RU") {
                $("input[id*='questionNameRU']").removeClass("hidden");
                $("input[id*='questionComentaryRU']").removeClass("hidden");
                $("input[id^='responseRU']").removeClass("hidden");
                $("p[id*='responseTextRU']").removeClass("hidden");
                //$("input[id*='questionNameRU']").prop("required", true);
            } else if (selectedLanguage === "RO") {
                $("input[id*='questionNameRO']").removeClass("hidden");
                $("input[id*='questionComentaryRO']").removeClass("hidden");
                $("input[id*='responseRO']").removeClass("hidden");
                $("p[id*='responseTextRO']").removeClass("hidden");
                //$("input[id*='questionNameRO']").prop("required", true);
            } else if (selectedLanguage === "EN") {
                $("input[id*='questionNameEN']").removeClass("hidden");
                $("input[id*='questionComentaryEN']").removeClass("hidden");
                $("input[id*='responseEN']").removeClass("hidden");
                $("p[id*='responseTextEN']").removeClass("hidden");
                // $("input[id*='questionNameEN']").prop("required", true);
            }
        }

        var selectedLanguage = $(".row").find("select[id*='uiLanguageSelect']").val();


        $(".row").on("change", "select[id*='uiLanguageSelect']", function () {
            // Get the selected language when the dropdown changes
            selectedLanguage = $(this).val();

            // Call the function to set input visibility based on the selected language
            setInputVisibility(selectedLanguage);
        });

        if (gradingTypeValue == '3' || gradingTypeValue == '4') {

            // Создаем кнопку
            var addButton = $("<button type='button' id='add-answer' style='width: 100%; margin-top: 10px;' class='btn btn-info waves-effect waves-light'><i class='mdi mdi-plus me-1'></i>@Localization.AddAnswer</button>");

            var answersCount = $(`#questionN_${index} .answer`).length;
            // Обработчик события для кнопки (если необходимо)
            addButton.on("click", function () {
                setInputVisibility(selectedLanguage);
                // Ваш код обработки события при нажатии на кнопку
                answersCount++;

                var newInput = `<div class="answer" id='newAnswer'>
                                <div class="form-group">
                                    <p>@Localization.AnswerText</p>
                                        <div class="row">
                                        <div class="col-md-10">
                                            <input hidden id='ResponseId' value='0' />
                                            <input type="text" id='responseRU_${answersCount}' class="form-control mb-4 ${selectedLanguage === 'RU' ? '' : 'hidden'}" maxlength='100' />
                                            <input type="text" id='responseRO_${answersCount}' class="form-control mb-4 ${selectedLanguage === 'RO' ? '' : 'hidden'}" maxlength='100' />
                                            <input type="text" id='responseEN_${answersCount}' class="form-control mb-4 ${selectedLanguage === 'EN' ? '' : 'hidden'}" maxlength='100' />

                                        </div>
                                        <div class="col-md-2">
                                            <button type='button' style='width: 100%;' class='btn btn-danger btnremoveAnsw'> <i class="uil-trash-alt"></i> @Localization.Delete</button>
                                        </div>
                                    </div>
                                </div>
                            </div>`;

                // Вставляем новый input перед кнопкой
                container.find("#answersContainer_" + index).append(newInput);

            });


            // Добавляем кнопку в форму
            container.append(addButton);


        }




        // Call the function to set input visibility based on the selected language
        setInputVisibility(selectedLanguage);

        container.on("click", ".btnremoveAnsw", function () {
            var $answer = $(this).closest('.answer');
            $answer.remove();
        });

        // Заменяем кнопку Edit на Save
        var saveButton = $("<a style='margin-top: 10px; width: 100%;' class='btn btn-success waves-effect waves-light save' title='@Localization.Save'><i class='uil uil-file-alt me-1' ></i>@Localization.Save</a>").on("click", function () {

            var ISValid = CustomValidator(index);

            if (ISValid == true) {
                container.find(".pencil").show();
                //container.find(".btnremove").hide();
                container.find(".save").hide();
                container.find(".btnremoveAnsw").hide();
                container.find("#add-answer").hide();
                container.find(".btnremoveQuestion").hide();

                document.getElementById('editBtn').style.display = 'block';

                var cancelBtn = document.getElementById('cancelBtn');
                cancelBtn.classList.remove('col-lg-12');
                cancelBtn.classList.add('col-lg-3');

                var updatedTitleRU = titleInputRU.val();
                var updatedTitleRO = titleInputRO.val();
                var updatedTitleEN = titleInputEN.val();

                var updateComentaryRU = comentaryInputRU.val();
                var updateComentaryRO = comentaryInputRO.val();
                var updateComentaryEN = comentaryInputEN.val();

                titleInputRU.replaceWith(`<p id="questionNameRU_${index}">` + updatedTitleRU + `</p>`);
                titleInputRO.replaceWith(`<p id="questionNameRO_${index}">` + updatedTitleRO + `</p>`);
                titleInputEN.replaceWith(`<p id="questionNameEN_${index}">` + updatedTitleEN + `</p>`);

                comentaryInputRU.replaceWith(`<p id="questionComentaryRU_${index}">` + updateComentaryRU + "</p>");
                comentaryInputRO.replaceWith(`<p id="questionComentaryRO_${index}">` + updateComentaryRO + "</p>");
                comentaryInputEN.replaceWith(`<p id="questionComentaryEN_${index}">` + updateComentaryEN + "</p>");

                function setInputVisibility(selectedLanguage) {
                    // Hide all language-specific input elements
                    $("p[id*='questionName']").addClass("hidden");

                    // Show the input element corresponding to the selected language
                    if (selectedLanguage === "RU") {
                        $("p[id*='questionNameRU']").removeClass("hidden");
                    } else if (selectedLanguage === "RO") {
                        $("p[id*='questionNameRO']").removeClass("hidden");
                    } else if (selectedLanguage === "EN") {
                        $("p[id*='questionNameEN']").removeClass("hidden");
                    }
                }

                var selectedLanguage = $(".row").find("select[id*='uiLanguageSelect']").val();
                setInputVisibility(selectedLanguage);



                var responseVariants = [];

                if (gradingTypeValue == '3' || gradingTypeValue == '4') {

                    let divsSetQuestion = container.find(`div[id*="answersContainer_${index}"]`);

                    divsSetQuestion.each(function (e, element) {

                        let btnDeleteAnsw = $("#" + element.id).find("[id^='btnremoveAnsw']");
                        btnDeleteAnsw.hide();
                        
                        let responsesRU = $("#" + element.id).find("[id*='responseRU']");
                        let responsesRO = $("#" + element.id).find("[id*='responseRO']");
                        let responsesEN = $("#" + element.id).find("[id*='responseEN']");


                        //if (responsesRU.length > 0) {

                        for (var i = 0; i < responsesRU.length; i++) {
                            let ruValInput = "";
                            let roValInput = "";
                            let enValInput = "";
                            let answerId = $("#" + element.id).find("input[id*='ResponseId']");
                            if (responsesRU[i].tagName === 'P') {
                                ruValInput = responsesRU[i].textContent;
                            } else {
                                ruValInput = responsesRU[i].value;
                            }
                            if (responsesRO[i].tagName === 'P') {
                                roValInput = responsesRO[i].textContent;
                            } else {
                                roValInput = responsesRO[i].value;
                            }
                            if (responsesEN[i].tagName === 'P') {
                                enValInput = responsesEN[i].textContent;
                            } else {
                                enValInput = responsesEN[i].value;
                            }

                            if (ruValInput.length > 0 || roValInput.length > 0 || enValInput.length) {
                                responseVariants.push({ id: answerId[i].value, questionId: $('#QuestionId').val(), response: JSON.stringify({ EN: enValInput, RO: roValInput, RU: ruValInput }) });
                            }

                        }

                        //}

                    });

                }





                container.find(".save").hide();
                container.find("#add-answer").remove();


                var upsertQuestionVM = {
                    id: container.find('#QuestionId').val(),
                    questionnaireId: $('#mainId').val(),
                    question: JSON.stringify({ EN: updatedTitleEN, RO: updatedTitleRO, RU: updatedTitleRU }),
                    gradingType: container.find('#questionGradingType_' + index).val(),
                    comentary: JSON.stringify({ EN: updateComentaryEN, RO: updateComentaryRO, RU: updateComentaryRU }),
                    responseVariant: JSON.stringify({ responseVariants }),
                };


                $.ajax({
                    url: '/Home/UpsertQuestion',
                    cache: false,
                    type: "POST",
                    data: JSON.stringify(upsertQuestionVM),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        drawPatrialView("/Home/GetQuestions/" + @Model.oid, "questions");
                    },

                });
            }
            else {

            }
        });


        // Добавляем текущую кнопку вызова редактирования в конец контейнера
        container.append(saveButton);
        // Убираем текущую кнопку Edit
        //container.find(".pencil").hide();
        var elements = document.getElementsByClassName('pencil');
        for (var i = 0; i < elements.length; i++) {
            elements[i].style.display = 'none';
        }
    }

    function CreateQuestion() {

        var elements = document.getElementsByClassName('pencil');
        for (var i = 0; i < elements.length; i++) {
            elements[i].style.display = 'none';
        }

        document.getElementById('editBtn').style.display = 'none';

        var cancelBtn = document.getElementById('cancelBtn');
        cancelBtn.classList.remove('col-lg-3');
        cancelBtn.classList.add('col-lg-12');

        var selectedLanguage = $(".row").find("select[id*='uiLanguageSelect']").val();

        function setInputVisibility(selectedLanguage) {
            // Hide all language-specific input elements
            $("input[id*='questionName']").addClass("hidden");
            $("input[id*='questionComentary']").addClass("hidden");
            $("input[id*='response']").addClass("hidden");

            // Show the input element corresponding to the selected language
            if (selectedLanguage === "RU") {
                $("input[id*='questionNameRU']").removeClass("hidden");


                $("input[id*='questionComentaryRU']").removeClass("hidden");

                $("input[id*='responseRU']").removeClass("hidden");

            } else if (selectedLanguage === "RO") {
                $("input[id*='questionNameRO']").removeClass("hidden");


                $("input[id*='questionComentaryRO']").removeClass("hidden");

                $("input[id*='responseRO']").removeClass("hidden");

            } else if (selectedLanguage === "EN") {
                $("input[id*='questionNameEN']").removeClass("hidden");


                $("input[id*='questionComentaryEN']").removeClass("hidden");

                $("input[id*='responseEN']").removeClass("hidden");
            }
        }

        var questionHtml = `<div class="question" id="questionN_0">
                                        <div class="form-group">
                                            <input hidden id="QuestionId" value="0" />
                                            <h4>@Localization.QuestionText</h4>
                                            <input type='text' id='questionNameRU_0' maxlength='100' class='form-control' />
                                            <input type='text' id='questionNameRO_0' maxlength='100' class='form-control' />
                                            <input type='text' id='questionNameEN_0' maxlength='100' class='form-control' />
                                        </div>

                                        <div id="detail_0">
                                            <div class="form-group">
                                                <label>@Localization.Comment</label>
                                                <input type='text' maxlength='100' id='questionComentaryRU_0' class='form-control' />
                                                <input type='text' maxlength='100' id='questionComentaryRO_0' class='form-control' />
                                                <input type='text' maxlength='100' id='questionComentaryEN_0' class='form-control' />
                                            </div>
                                                <div class="form-group" id="SelectGradingType">
                                                    <label>@Localization.GradingType</label>
                                                    <select id="questionGradingType_0" class="form-select">
                                                        <option value="1">@Localization.YesNo</option>
                                                        <option value="5">@Localization.Point5Score</option>
                                                        <option value="2">@Localization.Point10Score</option>
                                                        <option value="3">@Localization.SingleAnswerVariant</option>
                                                        <option value="4">@Localization.MultipleAnswerVariant</option>
                                                    </select>
                                                </div>
                                                <div class="answers-container_0" id="answersContainer_0" style="display: none;">
                                                <br />
                                                <h4>@Localization.Responses</h4>
                                                <div class="answer" id='newAnswer'>
                                                    <div class="col-lg-12">
                                                        <p>@Localization.AnswerText</p>
                                                        <input hidden id='newResponseId' value='0' />
                                                        <input type="text" maxlength='100' id='responseRU_0' class="form-control mb-4" />
                                                        <input type="text" maxlength='100' id='responseRO_0' class="form-control mb-4" />
                                                        <input type="text" maxlength='100' id='responseEN_0' class="form-control mb-4" />
                                                    </div>
                                                </div>
                                                <br />
                                            </div>
                                            <button type="button" id="add-answer" style="display: none; width: 100%; margin-top: 10px;" class="btn btn-info waves-effect waves-light"><i class="mdi mdi-plus me-1"></i> @Localization.AddAnswer</button>
                                        </div>
                                    </div>`;

        // Добавляем вопрос в контейнер
        $("#questions-container").append(questionHtml);

        setInputVisibility(selectedLanguage);
        $(".row").on("change", "select[id*='uiLanguageSelect']", function () {
            // Get the selected language when the dropdown changes
            selectedLanguage = $(this).val();

            // Call the function to set input visibility based on the selected language
            setInputVisibility(selectedLanguage);
        });

        // Создаем saveButton
        var saveButton = $("<a style='margin-top: 10px; width: 100%;' class='btn btn-success waves-effect waves-light save' title='@Localization.Save'><i class='uil uil-file-alt me-1' ></i>@Localization.Save</a>").on("click", function () {
            //container.find(".pencil").show();

            var ISValid = CustomValidator(0);

            if (ISValid == true) {

                $("#questionN_0").find(".save").hide();
                $("#questionN_0").find(".btnremoveAnsw").hide();
                $("#questionN_0").find("#add-answer").hide();
                $("#questionN_0").find(".btnremoveQuestion").hide();
                document.getElementById('editBtn').style.display = 'block';

                var cancelBtn = document.getElementById('cancelBtn');
                cancelBtn.classList.remove('col-lg-12');
                cancelBtn.classList.add('col-lg-3');
                var gradingTypeValue = $("#questionN_0").find("select[id*='questionGradingType_0']").val()

                var responseVariants = [];

                if (gradingTypeValue == '3' || gradingTypeValue == '4') {

                    let divsSetQuestion = $("#questionN_0").find(`div[id*="answersContainer_0"]`);

                    divsSetQuestion.each(function (e, element) {

                        let responsesRU = $("#" + element.id).find("[id^='responseRU']");
                        let responsesRO = $("#" + element.id).find("[id^='responseRO']");
                        let responsesEN = $("#" + element.id).find("[id^='responseEN']");


                        //if (responsesRU.length > 0) {

                        for (var i = 0; i < responsesRU.length; i++) {
                            let ruValInput = responsesRU[i].value;
                            let roValInput = responsesRO[i].value;
                            let enValInput = responsesEN[i].value;
                            

                            if (ruValInput.length > 0 || roValInput.length > 0 || enValInput.length) {
                                responseVariants.push({ id: 0, questionId: 0, response: JSON.stringify({ EN: enValInput, RO: roValInput, RU: ruValInput }) });
                            }

                        }

                        //}

                    });
                    

                    

                }

                let questionNameRU = $("#questionN_0").find("input[id*='questionNameRU_0']")[0].value;
                let questionNameRO = $("#questionN_0").find("input[id*='questionNameRO_0']")[0].value;
                let questionNameEN = $("#questionN_0").find("input[id*='questionNameEN_0']")[0].value;
                let questionName = JSON.stringify({ EN: questionNameEN, RO: questionNameRO, RU: questionNameRU });


                let questionComentaryRU = $("#questionN_0").find("input[id*='questionComentaryRU_']")[0].value;
                let questionComentaryRO = $("#questionN_0").find("input[id*='questionComentaryRO_']")[0].value;
                let questionComentaryEN = $("#questionN_0").find("input[id*='questionComentaryEN_']")[0].value;
                let questionComentary = JSON.stringify({ EN: questionComentaryEN, RO: questionComentaryRO, RU: questionComentaryRU });
                //$("#questionN_0").find("input[id*='questionComentary_0']").val(),
                var upsertQuestionVM = {
                    id: 0,
                    questionnaireId: $('#mainId').val(),
                    question: questionName,
                    gradingType: gradingTypeValue,
                    comentary: questionComentary,
                    responseVariant: JSON.stringify({ responseVariants }),
                };



                $.ajax({
                    url: '/Home/UpsertQuestion',
                    cache: false,
                    type: "POST",
                    data: JSON.stringify(upsertQuestionVM),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        drawPatrialView("/Home/GetQuestions/" + @Model.oid, "questions");
                    },

                });
            }
            else {
                return;
            }

        });
        //var container = $("#questionN_0");


        $("#questions-container").on("change", "select[id*='questionGradingType_0']", function () {
            var answersContainer = $("#questionN_0").find(".answers-container_0");
            var $answers = $("#questionN_0").find(".answer");

            if ($(this).val() == "4" || $(this).val() == "3") {
                $("#questionN_0").find("#add-answer").show();
                answersContainer.show();
                if ($answers.length === 0) {
                    var newDiv = `<div class="answer" id='newAnswer'>
                                                <div class="col-lg-12">
                                                    <p>@Localization.AnswerText</p>
                                                    <input hidden id='newResponseId' value='0' />
                                                    <input type="text" maxlength='100' id='responseRU_0' class="form-control mb-4" />
                                                    <input type="text" maxlength='100' id='responseRO_0' class="form-control mb-4" />
                                                    <input type="text" maxlength='100' id='responseEN_0' class="form-control mb-4" />
                                                </div>
                                            </div>`;

                    // Добавляем новый div внутрь существующего div
                    $("#answersContainer_0").append(newDiv);
                    setInputVisibility(selectedLanguage);
                }
            } else {
                $answers.remove(); //???!!/
                $("#questionN_0").find("#add-answer").hide();
                answersContainer.hide();
            }
        });


        var answerIndex = 1;
        // Обработчик события для кнопки (если необходимо)
        $("#add-answer").on("click", function () {
            // Ваш код обработки события при нажатии на кнопку


            var newInput = `<div class="answer" id='newAnswer'>
                                      <p>@Localization.AnswerText</p>
                                        <div class="row">
                                            <div class="col-md-10">
                                                <input hidden id='newResponseId' value='0' />
                                                <input type="text" maxlength='100' id='responseRU_${answerIndex}' class="form-control mb-4" />
                                                <input type="text" maxlength='100' id='responseRO_${answerIndex}' class="form-control mb-4" />
                                                <input type="text" maxlength='100' id='responseEN_${answerIndex}' class="form-control mb-4" />
                                            </div>
                                            <div class="col-md-2">
                                                <button type='button' class='btn btn-danger btnremoveAnsw' style="width: 100%;"><i class="uil-trash-alt"></i> @Localization.Delete</button>
                                            </div>
                                        </div>
                                    </div>`;

            // Вставляем новый input перед кнопкой
            $("#questionN_0").find(".answers-container_0").append(newInput);
            setInputVisibility(selectedLanguage);
            answerIndex++;
        });



        $("#questionN_0").on("click", ".btnremoveAnsw", function () {
            var $answer = $(this).closest('.answer');
            $answer.remove();
        });

        // Добавляем saveButton в контейнер с вопросом
        $("#questionN_0").append(saveButton);


        var questionCount = $('#questions-container .question').length;

        if (questionCount > 1) {
            var removeQuestionButton = $(`<button type='button' style = 'width: 100%;' class='btn btn-danger waves-effect waves-light btnremoveQuestion'> <i class='uil-trash-alt'></i> @Localization.Delete</button >`);
            $("#questionN_0").prepend(removeQuestionButton);
        }


        $("#questionN_0").on("click", ".btnremoveQuestion", function () {
            document.getElementById('editBtn').style.display = 'block';

            var cancelBtn = document.getElementById('cancelBtn');
            cancelBtn.classList.remove('col-lg-12');
            cancelBtn.classList.add('col-lg-3');

            drawPatrialView("/Home/GetQuestions/" + @Model.oid, "questions");

            $("#questionN_0").remove();
        });

        setInputVisibility(selectedLanguage);
    }

</script>


<div class="form-container">
    <div class="row">
        <div class="col-lg-12">

            <input type="hidden" asp-for="oid" id="mainId" />
            <br />

            <div class="row justify-content-center align-items-center text-center" id="titleContainer">
                <div class="col-auto">
                    <h1 id="mainTitleVal">@Model.Title</h1>
                </div>
                <div class="col-auto">
                    <a class='btn waves-light' id='editBtnTitle' onclick='editTitleMain()'><i class='fas fa-pencil-alt font-size-18' style='color: white;'></i></a>
                </div>
            </div>

            <br />
            @{
                EnUiLanguage currentLanguage;
                currentLanguage = Localization.languageState.ToUpper() switch
                {
                    "EN" => EnUiLanguage.EN,
                    "RO" => EnUiLanguage.RO,
                    "RU" => EnUiLanguage.RU,
                    _ => EnUiLanguage.EN,
                };

            }

            <h3 style="display: inline-block; margin-right: 10px;">@Localization.Questions</h3>
            <select id="uiLanguageSelect" name="uiLanguageSelect" style="padding: 5px; border-radius: 5px; font-size: 16px; border: 2px solid black;">
                <option value="@currentLanguage">@currentLanguage.ToString()</option>
                @foreach (EnUiLanguage leng in Enum.GetValues(typeof(EnUiLanguage)))
                {
                    if (leng != currentLanguage)
                    {
                        <option value="@leng">@leng.ToString()</option>
                    }
                }
            </select>
            



            <div class="tab-pane active" id="about" role="tabpanel">
                <div id="questions"></div>
            </div>

            <div class="row">
                <div id="editBtn" class="col-lg-9">
                    <a style="margin-top: 10px; width: 100%;" class="btn btn-success waves-effect waves-light" onclick="CreateQuestion()">@Localization.createQuestion</a>
                </div>
                <div id="cancelBtn" class="col-lg-3">
                    <a type="button" href="/" style="margin-top: 10px; width: 100%;" class="btn btn-secondary btn-soft-secondary waves-effect waves-light">@Localization.Cancel</a>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    drawPatrialViewWithLoad("/Home/GetQuestions/" + @Model.oid, "questions");
</script>